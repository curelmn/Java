{"id":2,"title":"两数之和","level":"简单","description":"给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。\n\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。\n\n你可以按任意顺序返回答案。\n\n \n\n示例 1：\n\n输入：nums \u003d [2,7,11,15], target \u003d 9\n输出：[0,1]\n解释：因为 nums[0] + nums[1] \u003d\u003d 9 ，返回 [0, 1] 。\n示例 2：\n\n输入：nums \u003d [3,2,4], target \u003d 6\n输出：[1,2]\n示例 3：\n\n输入：nums \u003d [3,3], target \u003d 6\n输出：[0,1]\n \n\n提示：\n\n2 \u003c\u003d nums.length \u003c\u003d 103\n-109 \u003c\u003d nums[i] \u003c\u003d 109\n-109 \u003c\u003d target \u003c\u003d 109\n只会存在一个有效答案\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/two-sum\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","templateCode":"class Solution {\n    public int[] twoSum(int[] nums, int target) {\n\n    }\n}","testCode":"    public static void main(String[] args) {\n        Solution solution \u003d new Solution();\n        int[] arr \u003d {2,7,11,15};\n        int target \u003d 9;\n        int[] result \u003d solution.twoSum(arr, 9);\n        if (result.length \u003d\u003d 2 \u0026\u0026 result[0] \u003d\u003d 1 \u0026\u0026 result[1] \u003d\u003d 2) {\n            System.out.println(\"TestCase OK!\");\n        } else {\n            System.out.println(\"TestCase Failed! arr: {2, 7, 11, 15}, target: 9\");\n        }\n\n        int[] arr2 \u003d {3,2,4};\n        int target2 \u003d 6;\n        int[] result2 \u003d solution.twoSum(arr2, target2);\n        if (result2.length \u003d\u003d 2 \u0026\u0026 result2[0] \u003d\u003d 1 \u0026\u0026 result2[1] \u003d\u003d 2) {\n            System.out.println(\"TestCaseOK!\");\n        } else {\n            System.out.println(\"TestCaseFailed!\");\n        }\n    }\n"}