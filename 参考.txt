#include <Windows.h>
#include <mysql.h>
#include <iostream>
#include <iomanip>
#pragma warning(disable:4996)
using namespace std;

class Student
{
	int number;
	char name[200];
	char sex[100];
	int score;

public:
	void Display();
	int menu();
	void input();
	int Alter();
	int Alter_menu();
	int Select();
	int Select_menu();
	int Delete();
	int Delete_menu();
	int ScoreStatistics();
	int ScoreStatistics_menu();
};


class Change :public Student//修改类
{
public:
	void Alter_number();
	void Alter_name();
	void Alter_sex();
	void Alter_score();
};


class Search :public Student//查询类
{
public:
	void number_Select();
	void name_Select();
	void sex_Select();
	void score_Select();
};


class Remove :public Student//删除类
{
public:
	void number_Del();
	void name_Del();
};


class Score :public Student//成绩统计类
{
public:
	void score_Sort();
	void Max_Min();
	void Average();
	void Proficiency_Pass();
};


void Score::Proficiency_Pass()//优秀率&及格率
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		float a, b, c, d;
		mysql_query(&mysql, "select count(*) from Table1 where score >= 90");
		cout << "优秀人数:";
		resultset = mysql_store_result(&mysql);
		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0];
				a =(float) atoi(row[0]);
			}
		}
		mysql_query(&mysql, "select count(*) from Table1");
		resultset = mysql_store_result(&mysql);

		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				b = (float)atoi(row[0]);
				cout << endl;
			}
		}

		mysql_query(&mysql, "select count(*) from Table1 where score >= 60");
		cout << "及格人数:";
		resultset = mysql_store_result(&mysql);
		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0];
				c = (float)atoi(row[0]);
				cout << endl;
			}
		}
		mysql_query(&mysql, "select count(*) from Table1");
		cout << endl << "总人数:";
		resultset = mysql_store_result(&mysql);

		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0] << endl;
				d = (float)atoi(row[0]);
				cout << endl;
			}
		}

		cout << "优秀率：";
		cout << ((a / b) * 100) << "%" << endl;
		mysql_free_result(resultset);

		cout << "及格率：";
		cout << ((c / d) * 100) << "%" << endl << endl;
		mysql_free_result(resultset);
	}
}


void Score::Average()//平均分
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		float a;
		mysql_query(&mysql, "select avg(score) from Table1");
		cout << "平均分:";
		resultset = mysql_store_result(&mysql);

		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0];
				a = (float)atoi(row[0]);
				cout << endl;
			}
		}
		mysql_free_result(resultset);
	}
}


void Score::Max_Min()//最高分最低分
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		float a, b;
		mysql_query(&mysql, "select max(score) from Table1");
		cout << "最高分:";
		resultset = mysql_store_result(&mysql);
		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0];
				a = (float)atoi(row[0]);
				cout << endl;
			}
		}
		mysql_query(&mysql, "select min(score) from Table1");
		cout << "最低分:";
		resultset = mysql_store_result(&mysql);

		if (mysql_num_rows(resultset) != NULL)
		{
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				cout << row[0];
				b = (float)atoi(row[0]);
				cout << endl;
			}
		}
		mysql_free_result(resultset);
	}
}


void Score::score_Sort()//成绩排序
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		cout << endl << "--------------成绩排名-------------" << endl;
		cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
		cout << "-----------------------------------" << endl;
		mysql_query(&mysql, "select * from Table1 order by score desc");
		resultset = mysql_store_result(&mysql);

		if (mysql_num_rows(resultset) != NULL)
		{
			//int numRows = mysql_num_rows(resultset);
			int numFields = mysql_num_fields(resultset);
			while (row = mysql_fetch_row(resultset))
			{
				int i;
				for (i = 0; i < numFields; i++)
				{
					cout << "    " << row[i] << "    ";
				}
				cout << endl;
				cout << "-----------------------------------" << endl;
			}
		}
		else
		{
			cout << "\n无查询结果！";
		}
		mysql_free_result(resultset);
	}
}


void Remove::name_Del()//按姓名删除
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		char std[220];
		char  na[200];
		cout << "请输入要删除信息的学生姓名: " << endl;
		cin >> na;
		sprintf(std, "delete from Table1 where name='%s';", na);
		if (mysql_query(&mysql, std))
		{
			cout << "数据查询发生错误" << endl;
		}
		else
		{
			cout << "删除成功！" << endl;
		}
	}
}


void Remove::number_Del()//按学号删除
{
	Student Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		printf("\n数据库连接发生错误!");
	}
	else
	{
		char std[220];
		int na;
		cout << endl << "请输入要删除信息的学生学号: " << endl;
		cin >> na;
		sprintf(std, "delete from Table1 where number=%d;", na);
		if (mysql_query(&mysql, std))
		{
			cout << "数据查询发生错误" << endl;
		}
		else
		{
			cout << "删除成功！" << endl;
		}
	}
}


void Search::name_Select()//姓名查询
{
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset=NULL;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		char n[200];
		cout << endl << "请输入要查的学生姓名：" << endl;
		cin >> n;
		cout << endl << "--------------显示信息-------------" << endl;
		cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
		cout << "-----------------------------------" << endl;
		sprintf(std, "select * from Table1 where name='%s';", n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据查询发生错误\n");
		}
		else
		{
			resultset = mysql_store_result(&mysql);
			if (mysql_num_rows(resultset) != NULL)
			{
				int numFields = mysql_num_fields(resultset);//**获得表中的字段
				while (row = mysql_fetch_row(resultset))
				{
					int i = 0;
					for (i = 0; i < numFields; i++)
					{
						mysql_query(&mysql, "SET NAMES gbk");
						cout << "    " << row[i] << "    ";
					}
					cout << endl;
				}
				cout << "-----------------------------------" << endl;
			}
			else
			{
				cout << "无结果！";
			}
		}
		mysql_free_result(resultset);
	}
}

void Search::number_Select()//学号查询
{
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset=NULL;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		int n;
		cout << endl << "请输入要查的学生学号：" << endl;
		cin >> n;
		cout << endl << "--------------显示信息-------------" << endl;
		cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
		cout << "-----------------------------------" << endl;
		sprintf(std, "select * from Table1 where number=%d;", n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据查询发生错误\n");
		}
		else
		{
			resultset = mysql_store_result(&mysql);
			if (mysql_num_rows(resultset) != NULL)
			{
				int numFields = mysql_num_fields(resultset);//**获得表中的字段
				while (row = mysql_fetch_row(resultset))
				{
					int i = 0;
					for (i = 0; i < numFields; i++)
					{
						mysql_query(&mysql, "SET NAMES gbk");
						cout << "    " << row[i] << "    ";
					}
					cout << endl;
				}
				cout << "-----------------------------------" << endl;
			}
			else
			{
				cout << "无结果！";
			}
		}
		mysql_free_result(resultset);
	}
}

void Search::sex_Select()//性别查询
{
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset=NULL;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		char n[200];
		cout << endl << "请输入要查的学生性别：" << endl;
		cin >> n;
		cout << endl << "--------------显示信息-------------" << endl;
		cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
		cout << "-----------------------------------" << endl;
		sprintf(std, "select * from Table1 where sex='%s';", n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据查询发生错误\n");
		}
		else
		{
			resultset = mysql_store_result(&mysql);
			if (mysql_num_rows(resultset) != NULL)
			{
				int numFields = mysql_num_fields(resultset);//**获得表中的字段
				while (row = mysql_fetch_row(resultset))
				{
					int i = 0;
					for (i = 0; i < numFields; i++)
					{
						mysql_query(&mysql, "SET NAMES gbk");
						cout << "    " << row[i] << "    ";
					}
					cout << endl;
				}
				cout << "-----------------------------------" << endl;
			}
			else
			{
				cout << "无结果！";
			}
		}
		mysql_free_result(resultset);
	}
}

void Search::score_Select()//成绩查询
{
	MYSQL mysql;
	mysql_init(&mysql);
	MYSQL_RES *resultset=NULL;
	MYSQL_ROW row;
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		int n;
		cout << endl << "请输入要查的学生成绩：" << endl;
		cin >> n;
		cout << endl << "--------------显示信息-------------" << endl;
		cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
		cout << "-----------------------------------" << endl;
		sprintf(std, "select * from Table1 where score=%d;", n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据查询发生错误\n");
		}
		else
		{
			resultset = mysql_store_result(&mysql);
			if (mysql_num_rows(resultset) != NULL)
			{
				int numFields = mysql_num_fields(resultset);//**获得表中的字段
				while (row = mysql_fetch_row(resultset))
				{
					int i = 0;
					for (i = 0; i < numFields; i++)
					{
						mysql_query(&mysql, "SET NAMES gbk");
						cout << "    " << row[i] << "    ";
					}
					cout << endl;
				}
				cout << "-----------------------------------" << endl;
			}
			else
			{
				cout << "显示无果！";
			}
		}
		mysql_free_result(resultset);
	}
}

void Change::Alter_score()//修改成绩
{
	cout << "显示学生数据" << endl;
	Change Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "1234456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		char m[200];
		int n;
		cout << endl << "对目标学号信息进行修改：" << endl;
		cin >> n;
		cout << endl << "请输入要新的成绩：" << endl;
		cin >> m;
		sprintf(std, "update Table1 set score='%s' where number=%d;", m, n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据库更改发生错误\n");
		}
		else
		{
			printf("\n数据库更改数据成功\n");
		}
	}
}

void Change::Alter_sex()//修改性别
{
	cout << "显示学生数据" << endl;
	Change Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		char m[200];
		int n;
		cout << endl << "对目标学号信息进行修改：" << endl;
		cin >> n;
		cout << endl << "请输入要新的性别：" << endl;
		cin >> m;
		sprintf(std, "update Table1 set sex='%s' where number=%d;", m, n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据库更改发生错误\n");
		}
		else
		{
			printf("\n数据库更改数据成功\n");
		}
	}
}


void Change::Alter_name()//修改姓名
{
	cout << "显示学生数据" << endl;
	Change Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		char m[200];
		int n;
		cout << endl << "对目标学号信息进行修改：" << endl;
		cin >> n;
		cout << endl << "请输入要新的姓名：" << endl;
		cin >> m;
		sprintf(std, "update Table1 set name='%s' where number=%d;", m, n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据库更改发生错误\n");
		}
		else
		{
			printf("\n数据库更改数据成功\n");
		}
	}
}

void Change::Alter_number()//修改学号
{
	cout << "显示学生数据" << endl;
	Change Zhang;
	Zhang.Display();
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		char std[200];
		int n, m;
		cout << endl << "请输入要修改的学号：" << endl;
		cin >> n;
		cout << endl << "请输入要更新的学号：" << endl;
		cin >> m;
		sprintf(std, "update Table1 set number=%d where number=%d;", m, n);
		if (mysql_query(&mysql, std))
		{
			printf("\n数据库更改发生错误\n");
		}
		else
		{
			printf("\n数据库更改数据成功\n");
		}
	}
}


int Student::Alter()//修改
{
	cout << endl << "进入修改系统..." << endl;
	int h;
	Change change;
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		while (1)
		{
			h = change.Alter_menu();
			switch (h)
			{
			case 1:
				change.Alter_number();
				break;
			case 2:
				change.Alter_name();
				break;
			case 3:
				change.Alter_sex();
				break;
			case 4:
				change.Alter_score();
				break;
			case 0:
				return 0;
				break;
			default:
				cout << "请选择正确的菜单项进行操作。多谢合作!" << endl;
			}
		}
	}
	return 0;
}


int Student::Select()//查询
{
	cout << endl << "进入查询系统..." << endl;
	Search search;
	MYSQL mysql;
	int h;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		while (1)
		{
			h = search.Select_menu();
			switch (h)
			{
			case 1:
				search.number_Select();
				break;
			case 2:
				search.name_Select();
				break;
			case 3:
				search.sex_Select();
				break;
			case 4:
				search.score_Select();
				break;
			case 0:
				return 0;
				break;
			default:
				cout << "请选择正确的菜单项进行操作。多谢合作!" << endl;
			}
		}
	}
	return 0;
}


int Student::Delete()//删除
{
	cout << endl << "进入删除系统..." << endl;
	Remove remove;
	MYSQL mysql;
	int h;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");

	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		while (1)
		{
			h = remove.Delete_menu();
			switch (h)
			{
			case 1:
				remove.number_Del();
				break;
			case 2:
				remove.name_Del();
				break;
			case 0:
				return 0;
				break;
			default:
				cout << "请选择正确的菜单项进行操作。多谢合作!" << endl;
			}
		}
	}
	return 0;
}


int Student::ScoreStatistics()//成绩统计
{
	cout << endl << "进入成绩统计系统..." << endl;
	Score statistics;
	MYSQL mysql;
	int h;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		while (1)
		{
			h = statistics.ScoreStatistics_menu();
			switch (h)
			{
			case 1:
				statistics.score_Sort();
				break;
			case 2:
				statistics.Max_Min();
				break;
			case 3:
				statistics.Average();
				break;
			case 4:
				statistics.Proficiency_Pass();
				break;
			case 0:
				return 0;
				break;
			default:
				cout << "请选择正确的菜单项进行操作。多谢合作!" << endl;
			}
		}
	}
	return 0;
}


void Student::input()//录入
{
	Student in;
	char std[200];
	MYSQL mysql;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "数据库连接错误！" << endl;
	}
	else
	{
		cout << endl << "请录入学生信息数据" << endl << endl;
		mysql_query(&mysql, "SET NAMES gbk");
		cout << "学号  " << "姓名  " << "性别  " << "成绩  " << endl;
		cin >> in.number >> in.name >> in.sex >> in.score;
		sprintf(std, "insert into Table1 VALUES(%d,'%s','%s',%d);", in.number, in.name, in.sex, in.score);
		mysql_query(&mysql, std);
		cout << "添加成功" << endl;
	}
}


void Student::Display()//显示
{
	MYSQL mysql;
	MYSQL_RES *resultset=NULL;
	MYSQL_ROW row;
	mysql_init(&mysql);
	mysql_options(&mysql, MYSQL_SET_CHARSET_NAME, "gbk");
	if (!mysql_real_connect(&mysql, "localhost", "root", "123456", "lmn", 3306, NULL, 0))
	{
		cout << "\n数据库连接发生错误！";
	}
	else
	{
		if (mysql_query(&mysql, "select * from Table1"))
		{
			cout << "表格数据显示失败！";
		}
		else
		{
			cout << endl << "--------------显示信息-------------" << endl;
			cout << "    学号    " << "姓名    " << "性别      " << "成绩" << endl;
			cout << "-----------------------------------" << endl;
			resultset = mysql_store_result(&mysql);
			if (mysql_num_rows(resultset) != NULL)
			{
				int numFields = mysql_num_fields(resultset);//**获得表中的字段
				while (row = mysql_fetch_row(resultset))
				{
					int i = 0;
					for (i = 0; i < numFields; i++)
					{
						mysql_query(&mysql, "SET NAMES gbk");
						cout << "    " << row[i] << "    ";
					}
					cout << endl;
					cout << "-----------------------------------" << endl;
				}
			}
			else
			{
				cout << "显示无果！";
			}
		}
		mysql_free_result(resultset);
	}
}


int Student::menu()//主菜单
{
	int s;
	cout
		<< endl
		<< "1:录入学生信息" << endl
		<< "2:显示学生信息" << endl
		<< "3:查询学生信息" << endl
		<< "4:删除学生信息" << endl
		<< "5:修改学生信息" << endl
		<< "6:统计学生成绩" << endl
		<< "0:退出系统" << endl << endl
		<< "请选择:";
	cin >> s;
	return s;
}


int Student::Alter_menu()//修改菜单
{
	int a;
	cout
		<< endl
		<< "1:修改学号" << endl
		<< "2:修改姓名" << endl
		<< "3:修改性别" << endl
		<< "4:修改成绩" << endl
		<< "0:后退" << endl << endl
		<< "请选择:";
	cin >> a;
	return a;
}


int Student::Select_menu()//查询菜单
{
	int k;
	cout
		<< endl
		<< "1:按学号查询" << endl
		<< "2:按姓名查询" << endl
		<< "3:按性别查询" << endl
		<< "4:按成绩查询" << endl
		<< "0:后退" << endl << endl
		<< "请选择:";
	cin >> k;
	return k;
}


int Student::Delete_menu()//删除菜单
{
	int g;
	cout
		<< endl
		<< "1:按学号删除" << endl
		<< "2:按姓名删除" << endl
		<< "0:后退" << endl << endl
		<< "请选择:";
	cin >> g;
	return g;
}


int Student::ScoreStatistics_menu()//成绩统计菜单
{
	int d;
	cout
		<< endl
		<< "1:对学生成绩进行排序" << endl
		<< "2:最高分和最低分" << endl
		<< "3:全体学生的平均分" << endl
		<< "4:优秀率和及格率" << endl
		<< "0:后退" << endl << endl
		<< "请选择:";
	cin >> d;
	return d;
}


int main()
{
	int n;
	Student Zhang;
	MYSQL mysql;
	mysql_init(&mysql);
	if (!mysql_real_connect(&mysql, "localhost", "root", "123", "mydb", 3306, NULL, 0))
	{
		cout << "\n数据库连接发生错误！\n";
	}
	else
	{
		cout << "数据库连接成功！\n";
		system("PAUSE");

		while (1)
		{
			n = Zhang.menu();
			switch (n)
			{
			case 1:
				Zhang.input();
				break;
			case 2:
				Zhang.Display();
				break;
			case 3:
				Zhang.Select();
				break;
			case 4:
				Zhang.Delete();
				break;
			case 5:
				Zhang.Alter();
				break;
			case 6:
				Zhang.ScoreStatistics();
				break;
			case 0:
				cout << endl << "~学生信息管理系统操作完毕~" << endl;
				exit(1);
				break;
			default:
				cout << endl << "请选择正确的菜单项进行操作!" << endl;
			}
		}
	}
	return 0;
}
